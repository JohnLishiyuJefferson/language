pipeline {
    agent { node { label 'docker-node' } }  // 可以根据需要选择代理

    environment {
        IMAGE_NAME = 'ghcr.io/johnlishiyujefferson/my-react'  // Docker 镜像的名称
        LATEST_TAG = 'latest'
    }

    stages {
        stage('Prepare') {
            steps {
                script {
                    env.GIT_COMMIT = sh(returnStdout: true, script: 'git rev-parse --short HEAD').trim()
                    env.BUILD_TIMESTAMP = sh(returnStdout: true, script: 'date +%Y%m%d%H%M%S').trim()
                    env.TAG = "${env.GIT_COMMIT}-${env.BUILD_TIMESTAMP}"  // 正确设置 TAG
                    echo "Git Commit: ${env.GIT_COMMIT}"
                    echo "Build Timestamp: ${env.BUILD_TIMESTAMP}"
                    echo "Tag: ${env.TAG}"
                    echo "Latest Tag: ${env.LATEST_TAG}"
                }
            }
        }

        stage('Checkout') {
            steps {
                echo 'Checking out code from repository...'
                checkout scm
            }
        }

        stage('Build Docker Image') {
            steps {
                echo 'Building Docker image from Dockerfile...'
                script {
                    docker.build("${IMAGE_NAME}:${TAG}", '.')
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                echo 'Pushing Docker image to registry...'
                script {
                    sh "echo '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' | docker login ghcr.io -u JohnLishiyuJefferson --password-stdin"
                    docker.image("${IMAGE_NAME}:${TAG}").push()
                }
            }
        }
    }

    post {
        success {
            echo 'Build Success!'
        }
        failure {
            echo 'Build Failed!'
        }
    }
}

